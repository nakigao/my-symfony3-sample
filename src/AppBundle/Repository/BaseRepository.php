<?php

namespace AppBundle\Repository;

use Symfony\Component\Serializer\Encoder\JsonEncoder;
use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
use Symfony\Component\Serializer\Serializer;

/**
 * BaseRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BaseRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * レコード群を走査して、value == needle のものに selected = true を付与する
     *
     * @param array $records
     * @param string $needle
     *
     * @return array
     * @note SelectBox関係の時に利用してる
     */
    protected function mergeWhichSelected($records = array(), $needle = '')
    {
        if (empty($records)) {
            return $records;
        }
        $results = array();
        // 最初に何も選択されていない場合の値を差し込む
        $results[] = array(
            'value' => null,
            'htmlText' => '-',
            'selected' => true
        );
        foreach ($records as $record) {
            if ($record['value'] == $needle) {
                $record['selected'] = true;
                $results[0]['selected'] = false;
            } else {
                $record['selected'] = false;
            }
            $results[] = $record;
        }
        return $results;
    }

    /**
     * レコードの総数を取得する
     *
     * @return int|mixed
     */
    public function getTotalCount()
    {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('COUNT(o.id)')
            ->from($this->_entityName, 'o')
            ->getQuery();
        return $query->getSingleScalarResult();
    }

    public function convertEntityToAssoc($entity = null, $needle = 'id')
    {
        if (empty($entity)) {
            return array();
        }
        $serializer = new Serializer(array(new ObjectNormalizer()), array(new JsonEncoder()));
        $getter = 'get' . ucfirst($needle);
        $index = $entity->$getter();
        $assoc[$index] = json_decode($serializer->serialize($entity, 'json'), true);
        return $assoc;
    }

    public function convertEntitiesToAssoc($entities = array(), $needle = 'id')
    {
        if (empty($entities)) {
            return array();
        }
        $assoc = array();
        $serializer = new Serializer(array(new ObjectNormalizer()), array(new JsonEncoder()));
        foreach ($entities as $entity) {
            $getter = 'get' . ucfirst($needle);
            $index = $entity->$getter();
            $assoc[$index] = json_decode($serializer->serialize($entity, 'json'), true);
        }
        return $assoc;
    }


}
